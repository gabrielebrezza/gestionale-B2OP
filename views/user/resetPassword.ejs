<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Password Reset</title>
    <link rel="icon" href="/img/logo-icon.png" sizes="32x32">

    <link rel="stylesheet" href="/styles/theme.css">
    <script>
        (function() {
            const savedTheme = localStorage.getItem('theme');
            if (savedTheme === 'dark') {
                document.documentElement.classList.add('dark');
            }
        })();
    </script>
    <style>
        .dark #loaderContainer {
            background: #1e1e1e;
        }
    </style>

    <style>
        @import url('https://fonts.googleapis.com/css2?family=Reddit+Mono:wght@200..900&family=Rubik:ital,wght@0,300..900;1,300..900&display=swap');
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body{
            background: var(--pageBg);
            color: var(--textColor);
        }
        main {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100dvh;
            background: 
                /* linear-gradient(to top, var(--elementsBg), #0000, #0000, #0000), */
                /* linear-gradient(to bottom, #333, #0000, #0000, #0000), */
                url('/img/main/parco-mezzi1.webp') no-repeat top center ;
            background-size: cover;
            margin-top: calc(-(var(--header-height) + 10px)) !important;
        }
        .bgOverlay{
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            background-color: transparent;
            background-image: radial-gradient(at center center, #153243 0%, #1a6c7a 100%);
            opacity: 0.5;
        }

        #resetForm {
            background-color: var(--elementsBg);
            color: var(--textColor);
            z-index: 1;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 2rem;
            max-width: 400px;
            width: 100%;
            display: flex;
            flex-direction: column;
            gap: 1rem;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        #resetForm label {
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        #resetForm input[type="password"] {
            padding: 0.75rem;
            font-size: 1rem;
            width: 100%;
            outline: none;
            background-color: var(--pageBg);
            color: var(--textColor);
            border: none;
            border-bottom: 2px solid var(--accentColor);
            background: none;
            transition: border-color 0.3s ease, background-color 0.3s ease, color 0.3s ease;
        }

        #resetForm input[type="password"]::placeholder {
            color: var(--placeHolders);
        }

        #resetForm input[type="password"]:focus {
            border-color: var(--accentColor);
        }

        #resetForm button{
            justify-self: center;
            align-self: center;
            align-content: center;
            justify-items: center;
            color: var(--defaultWhite);
            background: var(--accentColor);
            padding: 10px 15px;
            max-width: 200px;
            width: 100%;
            border: none;
            text-align: center;
            outline: 2px dashed var(--accentColor);
            outline-offset: -2px;
            transition: .05s;
        }
        #resetForm button:hover, #resetForm button:focus{
            outline-offset: 2px;
        }

        #errorMessage {
            color: var(--danger);
        }

        #successMessage {
            color: var(--accentColor);
        }
    </style>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
</head>
<body>
    <%- include('components/header.ejs') %>
    <main>
        <div class="bgOverlay"></div>
        <form action="/resetPassword/verify" method="POST" id="resetForm">
            <input type="hidden" name="token" value="<%= token %>">
            <input type="hidden" name="id" value="<%= customerId %>">
            <h2 style="text-align: center;">Password Reset</h2>
            <label for="password1">Nuova Password:</label>
            <input type="password" name="password" id="password1" placeholder="Inserisci la nuova password" required>
    
            <label for="password2">Conferma Password:</label>
            <input type="password" id="password2" placeholder="Conferma la nuova password" required>
    
            <button type="submit">Reset Password</button>
            <p id="errorMessage" style="display: none;">Le password non corrispondono.</p>
            <p id="successMessage" style="display: none;">Password aggiornata con successo! Verrai reindirizzato alla home tra 10 secondi...</p>
        </form>
    </main>
    
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const form = document.getElementById('resetForm');
            const password1 = document.getElementById('password1');
            const password2 = document.getElementById('password2');
            const errorMessage = document.getElementById('errorMessage');
            const successMessage = document.getElementById('successMessage');
    
            form.addEventListener('submit', async (e) => {
                e.preventDefault();

                if (password1.value !== password2.value) {
                    errorMessage.style.display = 'block';
                    return;
                } else {
                    errorMessage.style.display = 'none';
                }

                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            token: form.token.value,
                            id: form.id.value,
                            password: password1.value,
                        }),
                    });
    
                    const result = await response.json();
    
                    if (response.ok && result.success) {
                        successMessage.style.display = 'block';
    
                        setTimeout(() => {
                            window.location.href = '/';
                        }, 10000);
                    } else {
                        if(response.tokenExpired) return alert('Il link è scaduto, riprova.');
                        alert(result.message || 'Errore durante il reset della password.');
                    }
                } catch (error) {
                    console.error('Errore durante la richiesta:', error);
                    alert('Si è verificato un problema. Riprova più tardi.');
                }
            });
        });
    </script>
    <%- include('components/footer.ejs') %>
</body>
</html>